openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /v1
paths:
  /pets:
    description: endpoints for pets
    summary: endpoints for pets
    get:
      description: find pets
      operationId: findPets
      parameters:
        - name: mode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /humans:
    get:
      description: find humans
      operationId: humans
      responses:
        '200':
          description: humans response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Human'
            multipart/form-data:
              schema:
                properties:
                  stuff:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    NewPet:
      required:
        - name
      properties:
        name:
          type: string
          nullable: true
        tag:
          type: string

    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64

    Human:
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        kids:
          type: array
          items:
            $ref: '#/components/schemas/Human'

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
