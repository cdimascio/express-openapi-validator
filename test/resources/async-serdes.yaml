openapi: "3.0.0"
info:
  title: "Test for async serdes functionality"
  version: "1"
servers:
  - url: /v1/
paths:
  /users/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
        - name: managerId
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/UserId"
        - name: anotherManagerId
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users:
    post:
      requestBody:
        content :
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    UserId:
      type: string
      format: user-id
      pattern: '^[0-9a-fA-F]{24}$'
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        id2:
          $ref: "#/components/schemas/UserId"
        manager:
          $ref: "#/components/schemas/UserOneOf"
    UserPlus:
      type: object
      allOf:
        - $ref: "#/components/schemas/UserPlusProperties"
      properties:
        userPlusInline:
          type: string
          minLength: 1
        userCommonInline:
            type: string
            maxLength: 2
    UserPlusPlus:
      type: object
      allOf:
        - $ref: "#/components/schemas/UserPlusPlusProperties"
      properties:
        userPlusPlusInline:
          type: string
          minLength: 1
        userCommonInline:
          type: string
          maxLength: 2
    UserOneOf:
      type: object
      oneOf:
        - $ref: "#/components/schemas/UserPlus"
        - $ref: "#/components/schemas/UserPlusPlus"
      discriminator:
        propertyName: type
        mapping:
          PLUS: "#/components/schemas/UserPlus"
          PLUSPLUS: "#/components/schemas/UserPlusPlus"
    UserPlusProperties:
      type: object
      required:
        - type
        - plusUserId
      properties:
        type:
          type: string
          enum: [PLUS]
        plusUserId:
          $ref: "#/components/schemas/UserId"
        plusOnly:
          type: string
          pattern: /[A-Z]+/
        specialPlusOnly:
          $ref: "#/components/schemas/UserPlusSpecial"
    UserPlusPlusProperties:
      type: object
      required:
        - type
        - plusPlusUserId
      properties:
        type:
          type: string
          enum: [PLUSPLUS]
        plusPlusUserId:
          $ref: "#/components/schemas/UserId"
        plusPlusOnly:
          type: string
          pattern: /[A-Z]+/
        specialPlusPlusOnly:
          $ref: "#/components/schemas/UserPlusPlusSpecial"
    UserPlusSpecial:
      type: string
      pattern: /SPECIALPLUS/
    UserPlusPlusSpecial:
        type: string
        pattern: /SPECIALPLUSPLUS/
