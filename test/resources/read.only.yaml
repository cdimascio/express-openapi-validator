openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /v1

paths:
  /user_inlined:
    post:
      description: get user inlined
      operationId: getUserInlined
      parameters:
        - name: include_id
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - username
              properties:
                id:
                  type: string
                  readOnly: true
                username:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user:
    post:
      description: get user
      operationId: getUser
      parameters:
        - name: include_id
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /products:
    get:
      description: get products
      operationId: getProducts
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      description: create products
      operationId: createProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/inlined:
    post:
      description: create products
      operationId: createProductsInline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  readOnly: true
                name:
                  type: string
                price:
                  type: number
                created_at:
                  type: string
                  format: date-time
                  readOnly: true
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/nested:
    post:
      description: create products
      operationId: createProductsNested
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductNested'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNested'
                
  /readonly_required_allof:
    post:
      description: readonly required
      parameters: 
        - name: include_id
          in: query
          schema:
            type: boolean
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                optional: 
                  type: string
      responses:
        '200':
          description: readonly required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        price:
          type: number
        created_at:
          type: string
          format: date-time
          readOnly: true

    # TODO add nested test
    ProductNested:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        price:
          type: number
        created_at:
          type: string
          format: date-time
          readOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'

    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rating:
          type: integer

    User:
      description: default
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
          readOnly: true
        username:
          type: string
        name:
          type: string

    Item:
      allOf:
        - $ref: '#/components/schemas/Id'
        - $ref: '#/components/schemas/Name'
    Id:
      properties:
        id:
          type: string
          readOnly: true
      required:
        - id

    Name:
      properties:
        name:
          type: string
      required:
        - name
