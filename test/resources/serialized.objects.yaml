openapi: "3.0.2"
info:
  version: 1.0.0
  title: Request Query Serialization
  description: Request Query Serialization Test

servers:
  - url: /v1/

paths:
  /deep_object:
    x-vendorExtension1: accounts
    get:
      x-vendorExtension2: accounts
      summary: "retrieve a deep object"
      operationId: getDeepObject
      parameters:
        - in: query
          style: deepObject
          explode: true
          name: settings
          schema:
            type: object
            properties:
              tag_ids:
                type: array
                items:
                  type: integer
                  minimum: 0
                minItems: 1
              state:
                type: string
                enum: ["default", "validated", "pending"]
                default: "default"
                description: "Filter the tags by their validity. The default value ('default') stands for no filtering."
              greeting:
                type: string
                default: "hello"
      responses:
        "200":
          description: the object

  /deep_object_2:
    get:
      summary: "retrieve a deep object"
      operationId: getDeepObject2
      parameters:
        - in: query
          style: deepObject
          explode: true
          name: settings
          schema:
            $ref: '#/components/schemas/Deep'
      responses:
        "200":
          description: the object
  /tags:
    get:
      summary: "Retrieve all tags"
      operationId: getTags
      parameters:
        - in: query
          style: form
          name: settings
          explode: true
          schema:
            type: object
            properties:
              tag_ids:
                type: array
                items:
                  type: integer
                  minimum: 0
                minItems: 1
              state:
                type: string
                enum: ["default", "validated", "pending"]
                default: "default"
                description: "Filter the tags by their validity. The default value ('default') stands for no filtering."
      responses:
        "200":
          description: "An array of tag"
  /serialisable:
    get:
      summary: "Retrieve something"
      parameters:
        - in: query
          style: form
          name: settings
          description: Should be serialized
          explode: true
          schema:
            allOf:
              - type: object
                properties:
                  onlyValidated:
                    type: boolean
                    default: true
                  onlySelected:
                    type: array
                    default: []
                    uniqueItems: true
                    items:
                      type: integer
                      minimum: 0
                      example: 42
        - in: query
          name: timestamp
          description: Should not be serialized
          schema:
            description: Value passed to Javascript's `new Date()`.
            example: "2019-06-24T12:34:56.789Z"
            anyOf:
              - type: integer
                description: Unix milliseconds
                example: 1234567890123
                nullable: true
              - type: string
                description: ISO Timestamp
                pattern: \S
        - in: query
          name: fooBar
          description: Should be serialized if an object
          schema:
            oneOf:
              - type: string
                pattern: fooBar
              - type: object
                properties:
                  foo:
                    type: string
                    pattern: bar
                additionalProperties: false
                required:
                  - foo
      responses:
        "200":
          description: parsed & validated query params
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    Deep: 
      type: object
      properties:
        tag_ids:
          type: array
          items:
            type: integer
            minimum: 0
          minItems: 1
        state:
          type: string
          enum: ["default", "validated", "pending"]
          default: "default"
          description: "Filter the tags by their validity. The default value ('default') stands for no filtering."
        greeting:
          type: string
          default: "hello"
