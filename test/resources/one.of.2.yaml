
openapi: '3.0.0'

info:
  description: express-openapi-validator-test
  version: 1.0.0
  title: express-openapi-validator-test
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3010/v0

paths:
  /typethrees:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TypeThree'
      responses:
        '201':
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThree'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    SuperTypeOne:
      type: object
      properties:
        type:
          type: string
        value:
          type: number
          format: int32
      discriminator:
        propertyName: type
      required:
        - value
        - type

    TypeOne:
      allOf:   
        - $ref: '#/components/schemas/SuperTypeOne'
      type: object
      properties:
        type:
          type: string
          enum: [TypeOne]
        value:
          type: number
          format: int32
          enum: [ 1 ]
          default: 1
        uniqueOne:
          type: string
          default: Unique One
      required:
        - type
        - uniqueOne

    TypeTwo:
      allOf:   
        - $ref: '#/components/schemas/SuperTypeOne'
      type: object
      properties:
        type:
          type: string
          enum: [TypeTwo]
        value:
          type: number
          format: int32
          enum: [ 2 ]
          default: 2
        uniqueTwo:
          type: string
          default: Unique Two
      required:
        - uniqueTwo

    SuperTypeTwo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        someStrings:
          type: array
          items:
            type: string

    TypeThree:
      allOf:   
        - $ref: '#/components/schemas/SuperTypeTwo'
      type: object
      properties:
        type:
          type: string
          enum: [TypeThree]
          default: TypeThree
        somethings:
          type: array
          minItems: 1
          maxItems: 2
          items:
            oneOf:
              - $ref: "#/components/schemas/TypeOne"
              - $ref: "#/components/schemas/TypeTwo"
            discriminator:
              propertyName: type
      required:
        - type
        - somethings
